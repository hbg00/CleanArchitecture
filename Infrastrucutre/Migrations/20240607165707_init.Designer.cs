// <auto-generated />
using Infrastrucutre.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20240607165707_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entity.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Kraków",
                            PostalCode = "30-001",
                            Street = "Długa 5"
                        },
                        new
                        {
                            Id = 2,
                            City = "Kraków",
                            PostalCode = "30-001",
                            Street = "Szewska 2"
                        });
                });

            modelBuilder.Entity("Domain.Entity.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Spicy fried chicken inspired by the flavors of Nashville.",
                            Name = "Nashville Hot Chicken",
                            Price = 10.30m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Crispy and juicy chicken nuggets, perfect for snacking.",
                            Name = "Chicken Nuggets",
                            Price = 5.30m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Spicy fried chicken inspired by the flavors of Nashville.",
                            Name = "Nashville Hot Chicken",
                            Price = 10.30m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Crispy and juicy chicken nuggets, perfect for snacking.",
                            Name = "Chicken Nuggets",
                            Price = 5.30m,
                            RestaurantId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entity.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDelivery")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Category = "Fast Food",
                            ContactEmail = "contact@kfc.com",
                            ContactName = "John Doe",
                            Description = "KFC (short for Kentucky Fried Chicken) is an American fast food restaurant chain headquartered in Louisville, Kentucky, that specializes in fried chicken.",
                            HasDelivery = true,
                            Name = "KFC"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Category = "Fast Food",
                            ContactEmail = "contact@mcdonald.com",
                            ContactName = "Jane Smith",
                            Description = "McDonald's Corporation (McDonald's), incorporated on December 21, 1964, operates and franchises McDonald's restaurants.",
                            HasDelivery = true,
                            Name = "McDonald Szewska"
                        });
                });

            modelBuilder.Entity("Domain.Entity.Dish", b =>
                {
                    b.HasOne("Domain.Entity.Restaurant", "Restaurant")
                        .WithMany("Dishes")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Domain.Entity.Restaurant", b =>
                {
                    b.HasOne("Domain.Entity.Address", "Address")
                        .WithOne("Restaurant")
                        .HasForeignKey("Domain.Entity.Restaurant", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Domain.Entity.Address", b =>
                {
                    b.Navigation("Restaurant")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entity.Restaurant", b =>
                {
                    b.Navigation("Dishes");
                });
#pragma warning restore 612, 618
        }
    }
}
